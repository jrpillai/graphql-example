import { CostParamsType, JSONValue } from './types';
export declare const clearCache: () => void;
/**
 * Main function that executes GraphQL queries, maintaining a cache for optimization.
 * @param endPoint - the URL endpoint of the GraphQL server.
 * @param query - the GraphQL query string to be executed.
 * @param costOptions - cost parameters to optimize query execution.
 * @param variables - optional variables for the GraphQL query.
 * @returns - a promise that resolves with the response data and a boolean indicating if the data was from the cache.
 * @throws {ClientError} - when an error occurs during the execution process.
 */
export declare const Quellify: (endPoint: string, query: string, costOptions: CostParamsType, mutationMap?: Record<string, string[]>, variables?: Record<string, any>) => Promise<[JSONValue, boolean]>;
